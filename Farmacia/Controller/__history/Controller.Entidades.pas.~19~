unit Controller.Entidades;

interface

uses
  Controller.Interfaces, Model.Dao.Interfaces, Model.Entidades.Pedidos, Model.Entidades.PedidosItens,
  Model.Dao.PedidosItens, Model.Dao.Pedidos;

type
  TControleEntidades = class(TInterfacedObject, iControleEntidades)
    private
      FPedidos: iDAOEntity<TPedidos>;
      FPedidosItens: iDAOEntity<TPedidosItens>;
    public
      constructor Create;
      destructor Destroy; override;
      class function New: iControleEntidades;
      function Pedidos: iDAOEntity<TPedidos>;
      function PedidosItens: iDAOEntity<TPedidosItens>;
      function Produto: iDAOEntity<TProduto>;
  end;

implementation

constructor TControleEntidades.Create;
begin

end;

destructor TControleEntidades.Destroy;
begin
  inherited;
end;

class function TControleEntidades.New: iControleEntidades;
begin
   Result := Self.Create;
end;

function TControleEntidades.Pedidos: iDAOEntity<TPedidos>;
begin
   if not Assigned(FPedidos) then
      FPedidos := TDAOPedido.New;
   Result := FPedidos;
end;

function TControleEntidades.PedidosItens: iDAOEntity<TPedidosItens>;
begin
   if not Assigned(FPedidosItens) then
      FPedidosItens := TDAOPedidosItens.New;
   Result := FPedidosItens;
end;

function TControleEntidades.Produto: iDAOEntity<TProduto>;
begin
   if not Assigned(FProduto) then
      FProduto := TDAOProduto.New;
   Result := FProduto;
end;

end.
